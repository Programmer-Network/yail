name: Continuous Integration and Deployment

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  id-token: write
  pages: write
  checks: write
  deployments: write
  actions: write
  packages: write
  statuses: write
  security-events: write
  repository-projects: write
  pull-requests: write
  issues: write
  discussions: write

jobs:
  install-deps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache node_modules
        uses: actions/cache/save@v4
        with:
          path: |
            node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

  lint-and-test:
    needs: install-deps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Restore node_modules cache
        uses: actions/cache/restore@v4
        with:
          path: |
            node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Run linting
        run: pnpm lint:ci

      - name: Run type check
        run: pnpm types:check

      - name: Run tests
        run: pnpm test:run

  publish-storybook:
    needs: install-deps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Restore node_modules cache
        uses: actions/cache/restore@v4
        with:
          path: |
            node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Build Storybook
        env:
          NODE_OPTIONS: "--max_old_space_size=16384"
        run: pnpm run build-storybook

      - name: Create CNAME record file
        run: echo "yail.programmer-network" > ./storybook-static/CNAME

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./storybook-static"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  publish-npm:
    needs: [lint-and-test, publish-storybook]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"
          scope: "@programmer_network"

      - name: Restore node_modules cache
        uses: actions/cache/restore@v4
        with:
          path: |
            node_modules
            ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Build the code
        run: pnpm build

      - name: Set up Git identity
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false

      - name: Publish to npm
        run: npm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
